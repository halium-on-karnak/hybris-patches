From 1a27bd48255a96853e49d25c82a0fe47dd477f83 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bj=C3=B6rn=20Bidar?= <theodorstormgrade@gmail.com>
Date: Fri, 3 Jul 2020 22:15:49 +0200
Subject: [PATCH] (hybris) Silence some build errors to let the systemimage
 build
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Previous changes to bionic and the build system removed things that
art depends on. Either remove the parts that create errors or replace
them and insert dummy data to allow the building of the systemimage.

Signed-off-by: Bj√∂rn Bidar <theodorstormgrade@gmail.com>
Change-Id: Ide41188b6263a22c371ec28786bbc1ef1ee62df7
---
 runtime/thread-current-inl.h | 4 ++--
 runtime/thread.cc            | 4 ++--
 runtime/thread_list.cc       | 2 +-
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/runtime/thread-current-inl.h b/runtime/thread-current-inl.h
index 9241b1f875..a3e0520423 100644
--- a/runtime/thread-current-inl.h
+++ b/runtime/thread-current-inl.h
@@ -33,8 +33,8 @@ inline Thread* Thread::Current() {
   if (!is_started_) {
     return nullptr;
   } else {
-#ifdef ART_TARGET_ANDROID
-    void* thread = __get_tls()[TLS_SLOT_ART_THREAD_SELF];
+#ifdef DISABLED_FOR_HYBRIS_SUPPORT
+    void* thread = nullptr; //__get_tls()[TLS_SLOT_ART_THREAD_SELF];
 #else
     void* thread = pthread_getspecific(Thread::pthread_key_self_);
 #endif
diff --git a/runtime/thread.cc b/runtime/thread.cc
index be0e30ad11..da112e19c9 100644
--- a/runtime/thread.cc
+++ b/runtime/thread.cc
@@ -932,7 +932,7 @@ bool Thread::Init(ThreadList* thread_list, JavaVMExt* java_vm, JNIEnvExt* jni_en
     interpreter::InitInterpreterTls(this);
   }
 
-#ifdef ART_TARGET_ANDROID
+#ifdef DISABLED_FOR_HYBRIS_SUPPORT
   __get_tls()[TLS_SLOT_ART_THREAD_SELF] = this;
 #else
   CHECK_PTHREAD_CALL(pthread_setspecific, (Thread::pthread_key_self_, this), "attach self");
@@ -2198,7 +2198,7 @@ void Thread::ThreadExitCallback(void* arg) {
     LOG(WARNING) << "Native thread exiting without having called DetachCurrentThread (maybe it's "
         "going to use a pthread_key_create destructor?): " << *self;
     CHECK(is_started_);
-#ifdef ART_TARGET_ANDROID
+#ifdef DISABLED_FOR_HYBRIS_SUPPORT
     __get_tls()[TLS_SLOT_ART_THREAD_SELF] = self;
 #else
     CHECK_PTHREAD_CALL(pthread_setspecific, (Thread::pthread_key_self_, self), "reattach self");
diff --git a/runtime/thread_list.cc b/runtime/thread_list.cc
index ed6b2c91e5..37a2bd6911 100644
--- a/runtime/thread_list.cc
+++ b/runtime/thread_list.cc
@@ -1481,7 +1481,7 @@ void ThreadList::Unregister(Thread* self) {
 
   // Clear the TLS data, so that the underlying native thread is recognizably detached.
   // (It may wish to reattach later.)
-#ifdef ART_TARGET_ANDROID
+#ifdef DISABLED_FOR_HYBRIS_SUPPORT
   __get_tls()[TLS_SLOT_ART_THREAD_SELF] = nullptr;
 #else
   CHECK_PTHREAD_CALL(pthread_setspecific, (Thread::pthread_key_self_, nullptr), "detach self");
-- 
2.27.0

